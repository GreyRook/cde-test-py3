stages:
  - test-project
  - test
  - build
  - dist


image: 'greyrook/cde-dev-py36:6e1eef7dc9269d32d1e3b0c389050e65f36111bc'


before_script:
  - pipenv --python `which python3`
  # pipenv and pip 18.1 are not compatible:
  # avoid https://github.com/pypa/pipenv/issues/2924
  - pipenv run pip install pip==18.0
  - pipenv install --dev
  - pipenv run pip install -e .
.test_template: &test_def
  script:
  - pipenv run py.test --cov ${PYTHON_MODULE} --cov tests --cov-report=html --cov-report=term tests


pytest-python3.6:
  <<: *test_def
  coverage: '/\d+\%\s*$/'
  artifacts:
    name: "coverage"
    paths:
     - htmlcov/


# pytest-python3.7:
#   <<: *test_def
#   image: 'greyrook/cde-dev-py37:'


linting:
  stage: test
  script:
    - pipenv run pycodestyle ${PYTHON_MODULE} tests/
    - pipenv run pylint ${PYTHON_MODULE}
    - pipenv run mypy --no-incremental --ignore-missing-imports ${PYTHON_MODULE}


docker:
  stage: dist
  before_script:
    - mkdir -p ~/.docker
    - echo "$DOCKER_AUTH_CONFIG" > ~/.docker/config.json
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE:latest-${CI_COMMIT_REF_NAME} .

    - DOCKER_BACKGROUND=$(docker run -d --name ci-smoke-test $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA)
    - 'echo "Running in the background, container: $DOCKER_BACKGROUND"'
    - |
      for i in `seq 1 200`; do
        if docker inspect --format '{{ .State.Health.Status }}' $DOCKER_BACKGROUND | grep healthy; then
          docker rm -f $DOCKER_BACKGROUND
          exit 0
        fi
        sleep 0.1
      done

      docker rm -f $DOCKER_BACKGROUND
      exit 1

    - docker push $CI_REGISTRY_IMAGE:${CI_COMMIT_SHA}
    - docker push $CI_REGISTRY_IMAGE:latest-${CI_COMMIT_REF_NAME}
